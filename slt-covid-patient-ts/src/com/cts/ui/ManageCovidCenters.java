/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cts.ui;

import com.cts.controller.CommonController;
import com.cts.controller.CovidCenterController;
import com.cts.core.Validations;
import com.cts.daoimpl.CenterDaoImpl;
import com.cts.model.CovidCenter;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MYPC
 */
public class ManageCovidCenters extends javax.swing.JFrame {

    int centerId = 0;

    /**
     * Creates new form ManagePatients
     */
    public ManageCovidCenters() {
        initComponents();
        loaddataToTable();
    }

    private void loaddataToTable() {
        try {
            ResultSet rset = new CenterDaoImpl().getAll();
            String[] columnList = {"id", "centre_location", "latitude", "longitude"};
            CommonController.loadDataToTable(tblData, rset, columnList);
        } catch (SQLException ex) {
            Logger.getLogger(ManageCovidCenters.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addOrUpdateData() {

        if (txtCenterName.getText().trim() == null || txtCenterName.getText().trim().equalsIgnoreCase(null)) {
            JOptionPane.showMessageDialog(this, "Please enter name !", "Warning", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (txtLongitude.getText().trim() == null || txtLongitude.getText().trim().equalsIgnoreCase(null)) {
            JOptionPane.showMessageDialog(this, "Please enter longitude !", "Warning", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (txtLatitude.getText().trim() == null || txtLatitude.getText().trim().equalsIgnoreCase(null)) {
            JOptionPane.showMessageDialog(this, "Please enter latitude !", "Warning", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            if (centerId == 0) {
                CovidCenterController.add(txtCenterName.getText().trim(), txtLongitude.getText().trim(), txtLatitude.getText().trim());
            } else if (centerId != 0) {
                CovidCenterController.update(txtCenterName.getText().trim(), txtLongitude.getText().trim(), txtLatitude.getText().trim(), centerId);
            }

        } catch (SQLException ex) {
            Logger.getLogger(ManageCovidCenters.class.getName()).log(Level.SEVERE, null, ex);
        }
        loaddataToTable();
        clearAll();
        centerId = 0;
    }

    private void setEditdata() {
        DefaultTableModel dtm = (DefaultTableModel) tblData.getModel();
        int selectedRaw = tblData.getSelectedRow();
        if (selectedRaw != -1) {
            try {
                centerId = Validations.getIntOrZeroFromString(dtm.getValueAt(selectedRaw, 0).toString());
                CovidCenter covidCenter = CovidCenterController.getCenterById(centerId);
                txtLongitude.setText(covidCenter.getLongitude().toString());
                txtLatitude.setText(covidCenter.getLatitude().toString());
                txtCenterName.setText(covidCenter.getCenterName());
            } catch (SQLException ex) {
                Logger.getLogger(ManageCovidCenters.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void delete() {
        DefaultTableModel dtm = (DefaultTableModel) tblData.getModel();
        int selectedRaw = tblData.getSelectedRow();
        if (selectedRaw != -1) {
            try {
                int patientId = Validations.getIntOrZeroFromString(dtm.getValueAt(selectedRaw, 0).toString());
                CovidCenterController.delete(patientId);
            } catch (SQLException ex) {
                Logger.getLogger(ManageCovidCenters.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void clearAll() {
        txtLongitude.setText("");
        txtLatitude.setText("");
        txtCenterName.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        txtCenterName = new org.jdesktop.swingx.JXTextField();
        txtLongitude = new org.jdesktop.swingx.JXTextField();
        txtLatitude = new org.jdesktop.swingx.JXTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Covid Centers");

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Center Name ", "Longitude", "Latitude"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblData);
        if (tblData.getColumnModel().getColumnCount() > 0) {
            tblData.getColumnModel().getColumn(0).setMinWidth(0);
            tblData.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblData.getColumnModel().getColumn(0).setMaxWidth(0);
            tblData.getColumnModel().getColumn(1).setMinWidth(200);
            tblData.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblData.getColumnModel().getColumn(1).setMaxWidth(200);
            tblData.getColumnModel().getColumn(2).setResizable(false);
            tblData.getColumnModel().getColumn(3).setResizable(false);
        }

        txtCenterName.setPrompt("Center Name");
        txtCenterName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCenterNameActionPerformed(evt);
            }
        });

        txtLongitude.setPrompt("Longitude");

        txtLatitude.setPrompt("Latitude");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cts/images/saveIcon.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cts/images/editIcon.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cts/images/deleteIcon.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCenterName, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLongitude, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLatitude, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCenterName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtLongitude, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtLatitude, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addOrUpdateData();
        loaddataToTable();
        clearAll();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        delete();
        loaddataToTable();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setEditdata();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtCenterNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCenterNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCenterNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCovidCenters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCovidCenters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCovidCenters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCovidCenters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageCovidCenters().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblData;
    private org.jdesktop.swingx.JXTextField txtCenterName;
    private org.jdesktop.swingx.JXTextField txtLatitude;
    private org.jdesktop.swingx.JXTextField txtLongitude;
    // End of variables declaration//GEN-END:variables
}
